apiVersion: v1
kind: Secret
metadata:
  name: microcommunication
  namespace: microcommunication
type: Opaque
stringData:
  ApiKey: ""
  MongoDbConnectionString: ""
  RedisCacheConnectionString: ""
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: api
  namespace: microcommunication
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: microcommunication-api
          image: robinmanuelthiel/microcommunication-api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: "Cors"
              value: "https://app.yourdomain.com"
            - name: "MongoDbConnectionString"
              valueFrom:
                secretKeyRef:
                  name: microcommunication
                  key: MongoDbConnectionString
            - name: "RedisCacheConnectionString"
              valueFrom:
                secretKeyRef:
                  name: microcommunication
                  key: RedisCacheConnectionString
          resources:
            requests:
              memory: "64Mi"
              cpu: "125m"
            limits:
              memory: "256Mi"
              cpu: "500m"
---
kind: Service
apiVersion: v1
metadata:
  name: api
  namespace: microcommunication
#  annotations:
#    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
#    service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "api-ingress-subnet"
spec:
  type: LoadBalancer
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: web
  namespace: microcommunication
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: microcommunication-web
          image: robinmanuelthiel/microcommunication-web:latest
          imagePullPolicy: Always
          env:
            - name: API_URL
              value: "https://api.yourdoamin.com"
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
---
kind: Service
apiVersion: v1
metadata:
  name: web
  namespace: microcommunication
spec:
  type: LoadBalancer
  selector:
    app: web
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
